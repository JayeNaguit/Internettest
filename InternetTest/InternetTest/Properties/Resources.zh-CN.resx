<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
	Microsoft ResX Schema 
	
	Version 2.0
	
	The primary goals of this format is to allow a simple XML format 
	that is mostly human readable. The generation and parsing of the 
	various data types are done through the TypeConverter classes 
	associated with the data types.
	
	Example:
	
	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>
				
	There are any number of "resheader" rows that contain simple 
	name/value pairs.
	
	Each data row contains a name, and value. The row also contains a 
	type or mimetype. Type corresponds to a .NET class that support 
	text/value conversion through the TypeConverter architecture. 
	Classes that don't support this are serialized and stored with the 
	mimetype set.
	
	The mimetype is used for serialized objects, and tells the 
	ResXResourceReader how to depersist the object. This is currently not 
	extensible. For a given mimetype the value must be set accordingly:
	
	Note - application/x-microsoft.net.object.binary.base64 is the format 
	that the ResXResourceWriter will generate, however the reader can 
	read any of the formats listed below.
	
	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.
	
	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InternetTest" xml:space="preserve">
	<value>InternetTest</value>
  </data>
  <data name="Hi" xml:space="preserve">
	<value>嗨</value>
  </data>
  <data name="GoodAfternoon" xml:space="preserve">
	<value>下午好</value>
  </data>
  <data name="GoodNight" xml:space="preserve">
	<value>晚安</value>
  </data>
  <data name="GoodEvening" xml:space="preserve">
	<value>晚上好</value>
  </data>
  <data name="Settings" xml:space="preserve">
	<value>设置</value>
  </data>
  <data name="History" xml:space="preserve">
	<value>历史</value>
  </data>
  <data name="Tools" xml:space="preserve">
	<value>Tools</value>
  </data>
  <data name="Pinned" xml:space="preserve">
	<value>Pinned</value>
  </data>
  <data name="Home" xml:space="preserve">
	<value>Home</value>
  </data>
  <data name="WebUtilities" xml:space="preserve">
	<value>Web Utilities</value>
  </data>
  <data name="IPTools" xml:space="preserve">
	<value>IP Tools</value>
  </data>
  <data name="Commands" xml:space="preserve">
	<value>Commands</value>
  </data>
  <data name="Status" xml:space="preserve">
	<value>状态</value>
  </data>
  <data name="DownDetector" xml:space="preserve">
	<value>DownDetector</value>
  </data>
  <data name="MyIP" xml:space="preserve">
	<value>我的 IP</value>
  </data>
  <data name="LocateIP" xml:space="preserve">
	<value>定位 IP</value>
  </data>
  <data name="Ping" xml:space="preserve">
	<value>Ping</value>
  </data>
  <data name="IPConfig" xml:space="preserve">
	<value>IP Config</value>
  </data>
  <data name="WifiPasswords" xml:space="preserve">
	<value>WiFi Passwords</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
	<value>Get started</value>
  </data>
  <data name="SuggestedActions" xml:space="preserve">
	<value>Suggested actions</value>
  </data>
  <data name="Discover" xml:space="preserve">
	<value>Discover</value>
  </data>
  <data name="Details" xml:space="preserve">
	<value>Details</value>
  </data>
  <data name="Test" xml:space="preserve">
	<value>测试</value>
  </data>
  <data name="OpenBrowser" xml:space="preserve">
	<value>打开浏览器</value>
  </data>
  <data name="Connected" xml:space="preserve">
	<value>您已连接到互联网</value>
  </data>
  <data name="NotConnected" xml:space="preserve">
	<value>你没有连接到互联网</value>
  </data>
  <data name="TestInProgress" xml:space="preserve">
	<value>正在测试，请稍候</value>
  </data>
  <data name="TimeElapsed" xml:space="preserve">
	<value>Time elapsed</value>
  </data>
  <data name="StatusMessage" xml:space="preserve">
	<value>Status Message</value>
  </data>
  <data name="Error" xml:space="preserve">
	<value>错误</value>
  </data>
  <data name="LaunchTestToCheckConnection" xml:space="preserve">
	<value>启动测试以检查您的连接</value>
  </data>
  <data name="TestConnection" xml:space="preserve">
	<value>Test your connection</value>
  </data>
  <data name="WebsiteAvailable" xml:space="preserve">
	<value>该网站已上线</value>
  </data>
  <data name="WebsiteDown" xml:space="preserve">
	<value>该网站已关闭</value>
  </data>
  <data name="OfWebsite" xml:space="preserve">
	<value>of {0}</value>
  </data>
  <data name="ScheduledTests" xml:space="preserve">
	<value>Scheduled Tests</value>
  </data>
  <data name="LaunchScheduledTest" xml:space="preserve">
	<value>Start scheduled tests</value>
  </data>
  <data name="ScheduledTestInterval" xml:space="preserve">
	<value>All websites will be tested in {0} seconds.</value>
  </data>
  <data name="Interval" xml:space="preserve">
	<value>时间间隔</value>
  </data>
  <data name="SecondsLower" xml:space="preserve">
	<value>seconds</value>
  </data>
  <data name="StopScheduledTests" xml:space="preserve">
	<value>Stop scheduled tests</value>
  </data>
  <data name="TestWebsite" xml:space="preserve">
	<value>Test website</value>
  </data>
  <data name="DownDetectorPlaceHolder" xml:space="preserve">
	<value>Launch a test to see if a website is available or not</value>
  </data>
  <data name="MapProvider" xml:space="preserve">
	<value>地图提供者</value>
  </data>
  <data name="Country" xml:space="preserve">
	<value>国家</value>
  </data>
  <data name="Region" xml:space="preserve">
	<value>区域</value>
  </data>
  <data name="City" xml:space="preserve">
	<value>城市</value>
  </data>
  <data name="ZIPCode" xml:space="preserve">
	<value>邮政编码</value>
  </data>
  <data name="Latitude" xml:space="preserve">
	<value>纬度</value>
  </data>
  <data name="Longitude" xml:space="preserve">
	<value>经度</value>
  </data>
  <data name="Timezone" xml:space="preserve">
	<value>时区</value>
  </data>
  <data name="ISP" xml:space="preserve">
	<value>ISP</value>
  </data>
  <data name="ShowOnMap" xml:space="preserve">
    <value>在地图上显示</value>
  </data>
  <data name="IPShowHere" xml:space="preserve">
    <value>Your IP will show here.</value>
  </data>
  <data name="GetMyIP" xml:space="preserve">
    <value>Get my IP</value>
  </data>
  <data name="IPShowHere2" xml:space="preserve">
    <value>The IP will show here.</value>
  </data>
  <data name="LocateAnIP" xml:space="preserve">
    <value>Locate an IP</value>
  </data>
  <data name="InternetTestPro" xml:space="preserve">
    <value>InternetTest Pro</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="TxtFiles" xml:space="preserve">
    <value>Text files</value>
  </data>
</root>